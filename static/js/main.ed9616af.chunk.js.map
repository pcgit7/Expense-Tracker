{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/charts/ChartBar.js","components/charts/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onChangeFilter","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ChartBars","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ChartBar","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filterYear","setFilterYear","filteredExpenses","filter","toString","data","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","console","log","ReactDOM","createRoot","document","getElementById","render"],"mappings":"ibAaeA,MAXf,SAAcC,GAEV,IAAMC,EAAUD,EAAME,UAAY,SAElC,OACA,qBAAKA,UAAWD,EAAhB,SACID,EAAMG,YCkBCC,G,YAtBQ,SAACJ,GAOtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,SATgB,SAACC,GAE5BN,EAAMO,eAAeD,EAAME,OAAOC,QAOUA,MAAOT,EAAMU,SAAtD,UACE,wBAAQD,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,YCAKE,MAjBf,SAAqBX,GAEjB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAQ,CAACF,MAAM,SACjDG,EAAMf,EAAMa,KAAKC,eAAe,QAAQ,CAACC,IAAI,YAC7CC,EAAOhB,EAAMa,KAAKI,cAExB,OACA,sBAAKf,UAAU,eAAf,UAEI,qBAAKA,UAAU,iBAAf,SAAiCU,IACjC,qBAAKV,UAAU,eAAf,SAA+Ba,IAC/B,qBAAKb,UAAU,gBAAf,SAAgCc,QCOzBE,MAff,SAAqBlB,GAEjB,OACA,eAAC,EAAD,CAAME,UAAU,eAAhB,UAEE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,qBAAKX,UAAU,4BAAf,SACI,6BAAKF,EAAMmB,UAEf,sBAAKjB,UAAU,sBAAf,cAAuCF,EAAMoB,c,MCUpCC,MArBf,SAAqBrB,GAEjB,OAA0B,IAAvBA,EAAMsB,MAAMC,OAEJ,oBAAIrB,UAAU,0BAAd,gCAIX,oBAAIA,UAAU,gBAAd,SACKF,EAAMsB,MAAME,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEIN,MAASM,EAAQN,MACjBC,OAAUK,EAAQL,OAClBP,KAAQY,EAAQZ,MAHTY,EAAQC,U,OCUhBC,G,MArBI,SAAA3B,GAEf,IAAI4B,EAAiB,KAKpB,OAJE5B,EAAM6B,SAAW,IAEhBD,EAAgBE,KAAKC,MAAO/B,EAAMS,MAAQT,EAAM6B,SAAY,KAAO,KAGlE,8BACI,sBAAK3B,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBACf8B,MAAO,CAAEC,OAASL,OAGtB,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,eCI3CC,G,MAnBD,SAACnC,GACX,IAAMoC,EAAmBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAU7B,SAC/D8B,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEjC,OACI,qBAAKlC,UAAU,QAAf,SACKF,EAAMqC,WAAWb,KAAI,SAACa,GAAD,OACtB,cAACI,EAAD,CAEAhC,MAAS4B,EAAW5B,MACpBoB,SAAYU,EACZL,MAASG,EAAWH,OAHbG,EAAWH,cCgBfQ,EAxBO,SAAC1C,GACpB,IAD8B,EACxB2C,EAAkB,CACpB,CAACT,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,OAAQzB,MAAO,GACxB,CAACyB,MAAQ,OAAQzB,MAAO,GACxB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,GACvB,CAACyB,MAAQ,MAAOzB,MAAO,IAbG,cAgBTT,EAAM4C,UAhBG,IAgB9B,IAAI,EAAJ,qBAAoC,CAAC,IAA3BnB,EAA0B,QAEhCkB,EADqBlB,EAAQZ,KAAKgC,YACJpC,OAAQgB,EAAQL,QAlBpB,8BAqB9B,OAAO,cAAC,EAAD,CAAOiB,WAAcM,KCShBG,MA1Bf,SAAkB9C,GAEd,MAAmC+C,mBAAS,QAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAmBlD,EAAMsB,MAAM6B,QAAO,SAAA1B,GACxC,OAAOA,EAAQZ,KAAKI,cAAcmC,aAAeJ,KAKrD,OAEI,6BACC,eAAC,EAAD,CAAM9C,UAAU,WAAhB,UACG,cAAC,EAAD,CAAgBQ,SAAYsC,EAAYzC,eAdpB,SAAC8C,GACzBJ,EAAcI,MAcT,cAAC,EAAD,CAAeT,SAAYM,IAC3B,cAAC,EAAD,CAAa5B,MAAS4B,U,aCuDpBI,MA9Ef,SAAqBtD,GAEjB,MAAuC+C,mBAAS,IAAhD,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAyCT,mBAAS,IAAlD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAAqCX,mBAAS,IAA9C,mBAAOY,EAAP,KAAmBC,EAAnB,KA8CA,OACI,uBAAMC,SAjBc,SAACvD,GACrBA,EAAMwD,iBAEN,IAAMC,EAAc,CAChB5C,MAAQoC,EACRnC,QAAUqC,EACV5C,KAAO,IAAImD,KAAKL,IAGpB3D,EAAMiE,kBAAkBF,GAExBL,EAAkB,IAClBE,EAAgB,IAChBJ,EAAiB,KAIjB,UACI,sBAAKtD,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBAAOgE,KAAK,OAAO7D,SAxCR,SAACC,GAQ1BkD,EAAgBlD,EAAME,OAAOC,QAgCkCA,MAAO8C,OAG5D,sBAAKrD,UAAU,uBAAf,UACI,2CACA,uBAAOgE,KAAK,SAASC,IAAI,OAAOC,KAAK,OAAO/D,SAlChC,SAACC,GACzBoD,EAAiBpD,EAAME,OAAOC,QAiCyDA,MAAOgD,OAGtF,sBAAKvD,UAAU,uBAAf,UACI,0CACA,uBAAOgE,KAAK,OAAOC,IAAI,aAAa3B,IAAI,aAAanC,SAnCzC,SAACC,GACzBsD,EAAetD,EAAME,OAAOC,QAkCkEA,MAAOkD,UAIjG,sBAAKzD,UAAU,uBAAf,UACE,wBAAQgE,KAAK,SAASG,QAASrE,EAAMsE,SAArC,oBACA,wBAAQJ,KAAK,SAAb,gC,MCvCCK,MA/Bf,SAAoBvE,GAEhB,MAAmC+C,oBAAS,GAA5C,mBAAOyB,EAAP,KAAmBC,EAAnB,KAqBA,OACI,sBAAKvE,UAAU,cAAf,WACMsE,GAAa,wBAAQH,QAVD,WAC5BI,GAAa,IASQ,6BACfD,GAAa,cAAE,EAAF,CAAcP,kBAtBJ,SAACS,GAC9B,IAAMX,EAAW,aAEbrC,GAAKI,KAAK6C,SAASvB,YAChBsB,GAGP1E,EAAM4E,aAAab,GACnBU,GAAa,IAciEH,SAPnD,WACzBG,GAAa,UCrBfI,EAAiB,CACrB,CACEnD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,KAE1B,CAAEtC,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQP,KAAM,IAAImD,KAAK,KAAM,EAAG,KACrE,CACEtC,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,KAE1B,CACEtC,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,MA0Bbc,MArBf,WAEE,MAAgC/B,mBAAS8B,GAAzC,mBAAOjC,EAAP,KAAiBmC,EAAjB,KAUA,OACI,gCACC,cAAC,EAAD,CAAYH,aAVS,SAACnD,GACzBsD,GAAY,SAACC,GAEX,OADAC,QAAQC,IAAR,CAAazD,GAAb,mBAAyBuD,KACnB,CAAGvD,GAAT,mBAAqBuD,UAMrB,IAGC,cAAC,EAAD,CAAU1D,MAASsB,QCtCbuC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.ed9616af.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props)\r\n{\r\n    const classes = props.className + ' card ' ;\r\n    \r\n    return(\r\n    <div className={classes}>\r\n       {props.children}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const dropDownChangeHandler = (event) =>{\r\n     \r\n     props.onChangeFilter(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropDownChangeHandler} value={props.selected}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props)\r\n{\r\n    const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n    \r\n    return(\r\n    <div className='expense-date'>\r\n\r\n        <div className='expense__month'>{month}</div>\r\n        <div className='expense__day'>{day}</div>\r\n        <div className='expense__year'>{year}</div>\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\n\r\nfunction ExpenseItem(props)\r\n{\r\n    return (\r\n    <Card className='expense-item'>\r\n\r\n      <ExpenseDate date={props.date}/>\r\n      <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n      </div>\r\n      <div className='expense-item__price'>${props.amount}</div>\r\n\r\n    </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nfunction ExpenseList(props)\r\n{\r\n    if(props.items.length === 0)\r\n    {\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found.</h2>\r\n    }\r\n\r\n    return (\r\n    <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => (\r\n            <ExpenseItem \r\n                key = {expense.id}\r\n                title = {expense.title}\r\n                amount = {expense.amount}\r\n                date = {expense.date}\r\n                />\r\n        ))}\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default ExpenseList;","import './chartBars.css';\r\n\r\n\r\n const ChartBars = props => {\r\n     \r\n    let barFillHeight  = '0%';\r\n    if(props.maxValue > 0)\r\n    {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n     return (\r\n         <div>\r\n             <div className='chart-bar'>\r\n                 <div className='chart-bar__inner'>\r\n                     <div className='chart-bar__fill'\r\n                     style={{ height : barFillHeight }}\r\n                     ></div>\r\n                 </div>\r\n                 <div className='chart-bar__label'>{props.label}</div>\r\n             </div>\r\n         </div>\r\n     )\r\n }\r\n\r\nexport default ChartBars;","import ChartBars from \"./ChartBar\";\r\nimport './chart.css';\r\n\r\nconst Chart = (props) =>{\r\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value );\r\n    const totalMaximum = Math.max(...dataPointsValues); \r\n\r\n    return(\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoints) => (\r\n            <ChartBars\r\n            key = {dataPoints.label}\r\n            value = {dataPoints.value}\r\n            maxValue = {totalMaximum}\r\n            label = {dataPoints.label}\r\n            />\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../charts/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n   const chartDataPoints = [\r\n       {label : 'Jan', value: 0 },\r\n       {label : 'feb', value: 0 },\r\n       {label : 'Mar', value: 0 },\r\n       {label : 'Apr', value: 0 },\r\n       {label : 'May', value: 0 },\r\n       {label : 'June', value: 0 },\r\n       {label : 'July', value: 0 },\r\n       {label : 'Aug', value: 0 },\r\n       {label : 'Sep', value: 0 },\r\n       {label : 'Oct', value: 0 },\r\n       {label : 'Nov', value: 0 },\r\n       {label : 'Dec', value: 0 },\r\n   ];\r\n   \r\n   for(const expense of props.expenses){\r\n       const expenseMonth = expense.date.getMonth();\r\n       chartDataPoints[expenseMonth].value +=expense.amount;\r\n   }\r\n\r\n   return <Chart dataPoints = {chartDataPoints}/>;\r\n}\r\n\r\nexport default ExpensesChart;","import React , { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpenseList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nfunction Expenses(props)\r\n{\r\n    const [filterYear,setFilterYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (data) => {\r\n        setFilterYear(data);\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filterYear;\r\n    });\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <li>\r\n         <Card className='expenses'>\r\n            <ExpensesFilter selected = {filterYear} onChangeFilter = {filterChangeHandler} />\r\n             <ExpensesChart expenses = {filteredExpenses} />\r\n             <ExpenseList items = {filteredExpenses}/> \r\n         </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props)\r\n{   \r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n\r\n    /*\r\n    //single state\r\n    const [userInput,setUserInput] = useState({\r\n        enteredAmount:'',\r\n        enteredDate:'',\r\n        enteredTitle:''\r\n    });\r\n    */\r\n\r\n    const titleChangeHandler = (event) =>{\r\n      \r\n      //singlestate  \r\n      /*  setUserInput({\r\n          ...userInput,\r\n          enteredTitle : event.target.value,\r\n      }) ;\r\n     */\r\n      setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n      }\r\n\r\n      const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n      }\r\n\r\n      const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        \r\n        const expenseData = {\r\n            title : enteredTitle,\r\n            amount : +enteredAmount,\r\n            date : new Date(enteredDate)\r\n        };\r\n        \r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setEnteredAmount ('');\r\n        setEnteredDate ('');\r\n        setEnteredTitle ('');\r\n      }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' onChange={titleChangeHandler} value={enteredTitle}/>\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' onChange={amountChangeHandler} value={enteredAmount}/>\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} value={enteredDate}/>\r\n                </div> \r\n            </div>\r\n            \r\n            <div className='new-expense__actions'>\r\n              <button type='button' onClick={props.onCancel}>Cancel</button>\r\n              <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm'\r\n\r\nimport './NewExpense.css';\r\n\r\nfunction NewExpense(props)\r\n{\r\n    const [isEditing , setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n      const expenseData = {\r\n\r\n          id : Math.random().toString(),\r\n          ...enteredExpenseData\r\n      };\r\n      \r\n      props.onAddExpense(expenseData);\r\n      setIsEditing(false);\r\n    }\r\n\r\n    const startIsEditingHandler = () =>{\r\n      setIsEditing(true);\r\n    };\r\n\r\n    const stopIsEditingHandler = () =>{\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n           { !isEditing && <button onClick={startIsEditingHandler}>Add New Expense</button> }\r\n          { isEditing && < ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onCancel = {stopIsEditingHandler}/> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React , { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpenses/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  \n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {   \n    setExpenses((prevExpenses) => {\n      console.log([expense ,...prevExpenses]);\n      return ([expense, ...prevExpenses]);\n    });\n    \n  };\n\n  return (\n      <div>\n       <NewExpense onAddExpense = {addExpenseHandler}/>\n       .\n       <Expenses items = {expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}